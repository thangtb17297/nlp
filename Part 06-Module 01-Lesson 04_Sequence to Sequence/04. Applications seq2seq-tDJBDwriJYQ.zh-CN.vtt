WEBVTT
Kind: captions
Language: zh-CN

00:00:00.610 --> 00:00:03.129
在深入挖掘概念之前 我想

00:00:03.129 --> 00:00:05.740
先说说应用方面

00:00:05.740 --> 00:00:08.900
因为序列到序列 RNN

00:00:08.900 --> 00:00:11.140
有点抽象 它不能直观地说明

00:00:11.140 --> 00:00:14.798
我们可以使用这类模型做出哪些很棒的应用

00:00:14.798 --> 00:00:16.089
我们这样来想它

00:00:16.089 --> 00:00:18.609
我们有一个模型 它可以学习生成

00:00:18.609 --> 00:00:20.739
任意向量序列

00:00:20.739 --> 00:00:22.089
它们可以是字母

00:00:22.089 --> 00:00:24.759
可以是单词、图像或任何东西

00:00:24.760 --> 00:00:26.350
只要你能用向量表示它

00:00:26.350 --> 00:00:29.770
就可以在序列到序列模型中使用它

00:00:29.769 --> 00:00:32.500
所以在我们向这个模型输入一个

00:00:32.500 --> 00:00:34.479
输入向量序列后 它能学习生成

00:00:34.479 --> 00:00:37.629
任意向量序列

00:00:37.630 --> 00:00:39.830
那么我们能利用这个模型做什么呢？

00:00:39.829 --> 00:00:41.829
来看看

00:00:41.829 --> 00:00:44.619
假设你使用一个数据集训练它

00:00:44.619 --> 00:00:48.663
源数据是一个英语语句 目标数据

00:00:48.664 --> 00:00:49.329
是一个法语语句

00:00:49.329 --> 00:00:51.614
你有大量这样的示例

00:00:51.615 --> 00:00:53.490
如果你成功训练了它

00:00:53.490 --> 00:00:58.410
那么你的模型现在就变成了一个英语到法语翻译器

00:00:58.409 --> 00:01:01.539
使用一个新闻文章和摘要数据库训练它

00:01:01.539 --> 00:01:04.010
就会得到一个摘要机器人

00:01:04.010 --> 00:01:07.510
使用问题和答案数据集训练它

00:01:07.510 --> 00:01:10.390
就会得到一个问答模型

00:01:10.390 --> 00:01:14.980
使用一大堆对话数据集训练它 就会获得一个聊天机器人

00:01:14.980 --> 00:01:18.130
但记得输入不一定得是文字

00:01:18.129 --> 00:01:23.079
例如 RNN 通常与卷积网和

00:01:23.079 --> 00:01:25.060
图像字幕测试一起使用

00:01:25.060 --> 00:01:28.719
所以 输入序列也可以是音频

00:01:28.719 --> 00:01:30.789
可以看到 掌握序列到序列模型后

00:01:30.790 --> 00:01:34.420
你能做的事情非常多

00:01:34.420 --> 00:01:36.430
挑战在于找到传入模型的

00:01:36.430 --> 00:01:40.050
正确数据集并引导它完成学习过程

