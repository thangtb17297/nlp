WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.139
我们讲话时会在空气里生成正弦振动

00:00:04.139 --> 00:00:08.849
高音高振动比低音高快 频率也更高

00:00:08.849 --> 00:00:12.365
麦克风会检测出这类振动

00:00:12.365 --> 00:00:16.749
然后将声波携带的声能量转换成

00:00:16.748 --> 00:00:21.074
电能 以音频信号的形式记录下来

00:00:21.074 --> 00:00:24.780
词组 hello world (你好世界) 的音频信号看起来像这样

00:00:24.780 --> 00:00:26.789
就像处理其它模型

00:00:26.789 --> 00:00:30.530
我们需要处理组成输入的特征

00:00:30.530 --> 00:00:33.804
那这个信号的特征是什么呢？

00:00:33.804 --> 00:00:37.409
我们可以发现 这个信号看起来像是在两个斑点里

00:00:37.409 --> 00:00:42.229
这些斑点又恰与 hello 和 world 这两个单词对应

00:00:42.229 --> 00:00:45.299
我们还可以发现 信号的有些振动

00:00:45.299 --> 00:00:49.214
要比其它振动高 也就是振幅较大

00:00:49.215 --> 00:00:54.375
音频信号的振幅体现了声音所含声能量的多少

00:00:54.375 --> 00:00:56.284
也就是声音有多大声

00:00:56.284 --> 00:00:59.889
取一小块时间切片 我们来进一步观察这个信号

00:00:59.890 --> 00:01:03.380
我们会发现信号具不规则波动的形状

00:01:03.380 --> 00:01:07.094
语音是由许多频率同时组成的

00:01:07.094 --> 00:01:12.614
我们这里看到的信号实际上是所有频率加在一起的总和

00:01:12.614 --> 00:01:14.879
要恰当地分析信号

00:01:14.879 --> 00:01:18.610
我们需要把频率成分当特征来处理

00:01:18.611 --> 00:01:23.305
我们可以用傅里叶变换把信号分解为这些频率成分

00:01:23.305 --> 00:01:27.295
FFT 算法 也就是快速傅里叶变换

00:01:27.295 --> 00:01:30.129
十分适用于这个任务

00:01:30.129 --> 00:01:34.799
我们可以用这个分离技术把声音转为频谱图

00:01:34.799 --> 00:01:37.605
短语 hello world 的频谱图

00:01:37.605 --> 00:01:41.909
竖轴表示频率

00:01:41.909 --> 00:01:43.590
横轴则表示时间

00:01:43.590 --> 00:01:47.579
阴影强度表示信号的振幅

00:01:47.579 --> 00:01:50.159
要创建频谱图 首先

00:01:50.159 --> 00:01:52.354
按时帧分割信号

00:01:52.355 --> 00:01:57.840
然后 用 FFT 把每帧信号拆分成不同的频率成分

00:01:57.840 --> 00:02:03.810
这样一来 可用各频率所在的振幅向量来表示各时帧

00:02:03.810 --> 00:02:07.909
把向量按时间序列的顺序重新排好

00:02:07.909 --> 00:02:12.134
我们就能得到声音成分的可视化图像 也就是频谱图

00:02:12.134 --> 00:02:16.679
频谱图可以按时间与原始的音频信号并排放置

00:02:16.680 --> 00:02:20.735
通过频谱图 我们就可以完整地把声音数据表示出来

00:02:20.735 --> 00:02:25.110
但数据里还带有噪声和差异性

00:02:25.110 --> 00:02:29.280
而且 我们可能不需要这么多信息

00:02:29.280 --> 00:02:32.789
接下来 我们要讲特征提取技术

00:02:32.789 --> 00:02:36.709
该技术既可以减少噪声 又能减少数据的维数

